{"content":[{"key":"list","data":{"style":"unordered","items":[{"content":"概念","style":"unordered","closed":false,"items":[{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/\" data-title=\"\">概述</footnote>","style":"unordered","closed":false,"items":[{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/what-is-kubernetes/\" data-title=\"\">Kubernetes是什么?&nbsp;</footnote>","style":"unordered","closed":false,"items":[{"content":"时光回溯","style":"unordered","closed":false,"items":[{"content":"传统部署时代","style":"unordered","closed":false,"items":[{"content":"例如：安装Oracle","style":"unordered","closed":false,"items":[{"content":"针对操作系统准备安装包(下载或者U盘拷贝)","style":"unordered","closed":false,"items":[]},{"content":"安装Oracle需要的基础类库","style":"unordered","closed":false,"items":[]},{"content":"配置操作系统的相应配置","style":"unordered","closed":false,"items":[]},{"content":"执行安装检查，安装命令","style":"unordered","closed":false,"items":[]},{"content":"安装失败之后，要完全卸载","style":"unordered","closed":false,"items":[]}]}]},{"content":"虚拟化部署时代","style":"unordered","closed":false,"items":[{"content":"只是做了物理资源隔离，安装一个Oracle仍旧是个复杂的过程。","style":"unordered","closed":false,"items":[]}]},{"content":"容器部署时代","style":"unordered","closed":false,"items":[{"content":"敏捷应用程序的创建和部署","style":"unordered","closed":false,"items":[{"content":"关注点在如何构建应用程序的镜像以及启动镜像时的参数配置","style":"unordered","closed":false,"items":[]}]},{"content":"持续开发、集成和部署","style":"unordered","closed":false,"items":[]},{"content":"关注开发和运维的分离","style":"unordered","closed":false,"items":[]},{"content":"可观察性","style":"unordered","closed":false,"items":[]},{"content":"跨开发、测试和生产环境的一致性","style":"unordered","closed":false,"items":[{"content":"可以使用同样的构建产物，在不同的环境上运行，只是启动参数的差异。","style":"unordered","closed":false,"items":[]}]},{"content":"跨云和操作系统发型版本的可移植性","style":"unordered","closed":false,"items":[{"content":"容器运行环境解决了不同的云和操作系统之间的差异","style":"unordered","closed":false,"items":[]}]},{"content":"以应用程序为中心的管理","style":"unordered","closed":false,"items":[]},{"content":"松耦合、分布式、弹性、解放的微服务","style":"unordered","closed":false,"items":[{"content":"应用跟硬件，操作系统，网络都没有关系","style":"unordered","closed":false,"items":[]},{"content":"弹性：副本数可伸缩","style":"unordered","closed":false,"items":[]}]},{"content":"资源隔离","style":"unordered","closed":false,"items":[{"content":"每个应用使用的资管互不影响","style":"unordered","closed":false,"items":[]}]},{"content":"资源利用","style":"unordered","closed":false,"items":[{"content":"一个应用的资源利用不是固定的，例如启动一个应用的最低配置和最大需要的配置等。","style":"unordered","closed":false,"items":[]}]}]}]},{"content":"为什么需要Kubernetes,它能做什么?\ncollapsed:: true","style":"unordered","closed":false,"items":[{"content":"服务发现和负载均衡","style":"unordered","closed":false,"items":[{"content":"微服务的两大基石","style":"unordered","closed":false,"items":[{"content":"RPC","style":"unordered","closed":false,"items":[]},{"content":"消息","style":"unordered","closed":false,"items":[]}]}]},{"content":"存储编排","style":"unordered","closed":false,"items":[]},{"content":"自动部署和回滚","style":"unordered","closed":false,"items":[]},{"content":"自动完成装箱计算","style":"unordered","closed":false,"items":[{"content":"背包问题","style":"unordered","closed":false,"items":[]}]},{"content":"自我修复","style":"unordered","closed":false,"items":[{"content":"传统部署方案需要写定时任务来做应用健康检查和自我修复","style":"unordered","closed":false,"items":[]}]},{"content":"秘钥与配置管理","style":"unordered","closed":false,"items":[]}]},{"content":"Kubernetes不是什么\ncollapsed:: true","style":"unordered","closed":false,"items":[{"content":"不限制支持的应用类型。","style":"unordered","closed":false,"items":[]},{"content":"不部署源代码,也不构建你的应用程序。\n-\n-","style":"unordered","closed":false,"items":[]}]}]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/components/\" data-title=\"\">Kubernetes组件</footnote>id:: 62638d0b-2509-439b-a1e1-df37b3aa61e2","style":"unordered","closed":false,"items":[{"content":"控制平面组件(Control Plane Components)","style":"unordered","closed":false,"items":[{"content":"kube-apiserver","style":"unordered","closed":false,"items":[{"content":"该组件公开了 Kubernetes API","style":"unordered","closed":false,"items":[]},{"content":"支持水平扩展","style":"unordered","closed":false,"items":[{"content":"x轴扩展 增加副本数 ✔️","style":"unordered","closed":false,"items":[]},{"content":"y轴扩展 功能、业务拆分成不同的微服务","style":"unordered","closed":false,"items":[]},{"content":"z轴扩展 数据分片，租户隔离","style":"unordered","closed":false,"items":[]}]}]},{"content":"[[etcd]]","style":"unordered","closed":false,"items":[{"content":"etcd 是兼具一致性和高可用性的键值数据库","style":"unordered","closed":false,"items":[{"content":"((6263b38c-6891-4342-9190-7b68c9b803ee)) 一致性✔️","style":"unordered","closed":false,"items":[]},{"content":"((6263b398-d03f-403d-a306-39fb4491a41b)) 高可用 ✔️","style":"unordered","closed":false,"items":[]},{"content":"((6263b3ab-4843-43de-97ba-a431f053b10a)) 分区容错 X","style":"unordered","closed":false,"items":[]}]}]},{"content":"kube-scheduler","style":"unordered","closed":false,"items":[{"content":"负责监视新创建的、未指定运行节点的 Pods，选择节点让 Pod 在上面运行。","style":"unordered","closed":false,"items":[]},{"content":"调度决策考虑的因素包括","style":"unordered","closed":false,"items":[{"content":"单个 Pod 和 Pod 集合的资源需求","style":"unordered","closed":false,"items":[]},{"content":"硬件/软件/策略约束","style":"unordered","closed":false,"items":[]},{"content":"亲和性和反亲和性规范","style":"unordered","closed":false,"items":[]},{"content":"数据位置","style":"unordered","closed":false,"items":[]},{"content":"工作负载间的干扰和最后时限","style":"unordered","closed":false,"items":[]}]}]},{"content":"kube-controller-manager\ncollapsed:: true","style":"unordered","closed":false,"items":[{"content":"节点控制器（Node Controller）: 负责在节点出现故障时进行通知和响应","style":"unordered","closed":false,"items":[]},{"content":"任务控制器（Job controller）: 监测代表一次性任务的 Job 对象，然后创建 Pods 来运行这些任务直至完成","style":"unordered","closed":false,"items":[]},{"content":"端点控制器（Endpoints Controller）: 填充端点(Endpoints)对象(即加入 Service 与 Pod)","style":"unordered","closed":false,"items":[]},{"content":"服务帐户和令牌控制器（Service Account &amp; Token Controllers）: 为新的命名空间创建默认帐户和 API 访问令牌","style":"unordered","closed":false,"items":[]}]},{"content":"cloud-controller-manager\ncollapsed:: true","style":"unordered","closed":false,"items":[{"content":"节点控制器（Node Controller）: 用于在节点终止响应后检查云提供商以确定节点是否已被删除","style":"unordered","closed":false,"items":[]},{"content":"路由控制器（Route Controller）: 用于在底层云基础架构中设置路由","style":"unordered","closed":false,"items":[]},{"content":"服务控制器（Service Controller）: 用于创建、更新和删除云提供商负载均衡器","style":"unordered","closed":false,"items":[]}]}]},{"content":"Node组件","style":"unordered","closed":false,"items":[{"content":"kubelet","style":"unordered","closed":false,"items":[{"content":"一个在集群中每个节点上运行的代理。","style":"unordered","closed":false,"items":[]},{"content":"它保证容器（containers）都 运行在 Pod 中。","style":"unordered","closed":false,"items":[]},{"content":"kubelet 接收一组通过各类机制提供给它的 PodSpecs，确保这些 PodSpecs 中描述的容器处于运行状态且健康。","style":"unordered","closed":false,"items":[]},{"content":"kubelet 不会管理不是由 Kubernetes 创建的容器。","style":"unordered","closed":false,"items":[]}]},{"content":"kube-proxy","style":"unordered","closed":false,"items":[{"content":"是集群中每个节点上运行的网络代理","style":"unordered","closed":false,"items":[]},{"content":"维护节点上的网络规则","style":"unordered","closed":false,"items":[]},{"content":"如果操作系统提供了数据包过滤层并可用的话，kube-proxy 会通过它(例如[[iptables]])来实现网络规则。否则， kube-proxy 仅转发流量本身。","style":"unordered","closed":false,"items":[]}]},{"content":"容器运行时(Container Runtime)\ncollapsed:: true","style":"unordered","closed":false,"items":[{"content":"[[Docker]]","style":"unordered","closed":false,"items":[]},{"content":"[[containerd]]","style":"unordered","closed":false,"items":[]},{"content":"[[CRI-O]]","style":"unordered","closed":false,"items":[]}]}]},{"content":"插件(Addon","style":"unordered","closed":false,"items":[{"content":"DNS","style":"unordered","closed":false,"items":[{"content":"集群 DNS 是一个 DNS 服务器，和环境中的其他 DNS 服务器一起工作，它为 Kubernetes 服务提供 DNS 记录。","style":"unordered","closed":false,"items":[]},{"content":"Kubernetes 启动的容器自动将此 DNS 服务器包含在其 DNS 搜索列表中。","style":"unordered","closed":false,"items":[]}]},{"content":"Web界面(仪表盘)","style":"unordered","closed":false,"items":[]},{"content":"容器资源监控","style":"unordered","closed":false,"items":[]},{"content":"集群层面日志","style":"unordered","closed":false,"items":[]}]}]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/kubernetes-api/\" data-title=\"\">KubernetesAPI</footnote>collapsed:: true","style":"unordered","closed":false,"items":[{"content":"OpenAPI规范","style":"unordered","closed":false,"items":[{"content":"OpenAPI V2","style":"unordered","closed":false,"items":[]},{"content":"OpenAPI V3","style":"unordered","closed":false,"items":[]}]}]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/\" data-title=\"\">使用Kubernetes对象</footnote>id:: 62638d0b-9f49-4406-a924-d4ea728d6efb","style":"unordered","closed":false,"items":[{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/kubernetes-objects/\" data-title=\"\">理解Kubernetes对象</footnote>id:: 62638d0b-62aa-4e9f-9892-128653b42c87","style":"unordered","closed":false,"items":[{"content":"总结","style":"unordered","closed":false,"items":[{"content":"Kubernetes 对象是持久化的实体","style":"unordered","closed":false,"items":[]},{"content":"Kubernetes 使用这些实体去表示整个集群的状态","style":"unordered","closed":false,"items":[]},{"content":"达成的效果：","style":"unordered","closed":false,"items":[{"content":"哪些容器化应用在运行（以及在哪些节点上）","style":"unordered","closed":false,"items":[]},{"content":"可以被应用使用的资源","style":"unordered","closed":false,"items":[]},{"content":"关于应用运行时表现的策略，比如重启策略、升级策略，以及容错策略","style":"unordered","closed":false,"items":[]}]},{"content":"Kubernetes 对象是 “目标性记录” —— 一旦创建对象，Kubernetes 系统将持续工作以确保对象存在。 通过创建对象，本质上是在告知 Kubernetes 系统，所需要的集群工作负载看起来是什么样子的， 这就是 Kubernetes 集群的 期望状态（Desired State）。","style":"unordered","closed":false,"items":[]},{"content":"所有对Kubernetes对象的操作，最终都是通过使用 Kubernetes API","style":"unordered","closed":false,"items":[]}]},{"content":"对象规约（Spec）与状态（Status）","style":"unordered","closed":false,"items":[{"content":"Spec： 对象期望状态（Desired State）。","style":"unordered","closed":false,"items":[]},{"content":"Status：对象当前状态（Current State）","style":"unordered","closed":false,"items":[]}]},{"content":"描述 Kubernetes 对象","style":"unordered","closed":false,"items":[{"content":"多数情况下是使用yaml文件描述。","style":"unordered","closed":false,"items":[]}]},{"content":"必需字段","style":"unordered","closed":false,"items":[{"content":"apiVersion - 创建该对象所使用的 Kubernetes API 的版本","style":"unordered","closed":false,"items":[{"content":"例如：apps/v1","style":"unordered","closed":false,"items":[]}]},{"content":"kind - 想要创建的对象的类别","style":"unordered","closed":false,"items":[{"content":"例如：Pod，Deployment，Service","style":"unordered","closed":false,"items":[]}]},{"content":"metadata - 帮助唯一性标识对象的一些数据，包括一个 name 字符串、UID 和可选的 namespac","style":"unordered","closed":false,"items":[]},{"content":"spec - 你所期望的该对象的状态，对象 spec 的精确格式对每个 Kubernetes 对象来说是不同的。","style":"unordered","closed":false,"items":[]}]}]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/object-management/\" data-title=\"\">Kubernetes对象管理</footnote>id:: 62638d0b-2d2a-4742-b172-68791f409b92","style":"unordered","closed":false,"items":[{"content":"管理技巧","style":"unordered","closed":false,"items":[{"content":"","style":"unordered","closed":false,"items":[]}]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/tasks/manage-kubernetes-objects/imperative-command/\" data-title=\"\">指令式命令</footnote>","style":"unordered","closed":false,"items":[{"content":"例子\nkubectl create deployment nginx --image nginx","style":"unordered","closed":false,"items":[]},{"content":"权衡","style":"unordered","closed":false,"items":[{"content":"与对象配置相比的有点：","style":"unordered","closed":false,"items":[{"content":"命令简单，易学且易于记忆。","style":"unordered","closed":false,"items":[]},{"content":"命令仅需一步即可对集群进行更改。","style":"unordered","closed":false,"items":[]}]},{"content":"与对象配置相比的缺点：","style":"unordered","closed":false,"items":[{"content":"命令不便于与变更审查流程的集成。","style":"unordered","closed":false,"items":[]},{"content":"命令不提供与更改关联的审核跟踪。","style":"unordered","closed":false,"items":[]},{"content":"除了实时内容外，命令不提供记录原。","style":"unordered","closed":false,"items":[]},{"content":"明星不提供用于创建新对象的模板。","style":"unordered","closed":false,"items":[]}]}]}]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/tasks/manage-kubernetes-objects/imperative-config/\" data-title=\"\">指令式对象配置</footnote>","style":"unordered","closed":false,"items":[{"content":"例子","style":"unordered","closed":false,"items":[{"content":"kubectl create -f nginx.yaml","style":"unordered","closed":false,"items":[]},{"content":"kubectl delete -f nginx.yaml -f redis.yaml","style":"unordered","closed":false,"items":[]},{"content":"kubectl replace -f nginx.yaml","style":"unordered","closed":false,"items":[]}]},{"content":"权衡","style":"unordered","closed":false,"items":[{"content":"与执行令式命令相比","style":"unordered","closed":false,"items":[{"content":"优点：","style":"unordered","closed":false,"items":[{"content":"对象配置可以存储在源控制系统中，比如Git。","style":"unordered","closed":false,"items":[]},{"content":"对象配置可以与流程集成，例如在推送和审计之前检查更新。","style":"unordered","closed":false,"items":[]},{"content":"对象配置提供了用于创建新对象的模板。","style":"unordered","closed":false,"items":[]}]},{"content":"缺点：","style":"unordered","closed":false,"items":[{"content":"对象配置需要对对象架构有基本的了解。(不算缺点)","style":"unordered","closed":false,"items":[]},{"content":"对象配置需要额外的步骤来编写yaml文件。","style":"unordered","closed":false,"items":[]}]}]},{"content":"与声明式对象配置相比：","style":"unordered","closed":false,"items":[{"content":"优点：","style":"unordered","closed":false,"items":[{"content":"指令式对象配置行为更加简单易懂。","style":"unordered","closed":false,"items":[]},{"content":"从 Kubernetes 1.5 版本开始，指令对象配置更加成熟。","style":"unordered","closed":false,"items":[]}]},{"content":"缺点：","style":"unordered","closed":false,"items":[{"content":"指令式对象配置更适合文件，而非目录。","style":"unordered","closed":false,"items":[]},{"content":"对活动对象的更新，必须反应在配置文件中，否则会在下一次替换时丢失。(比如副本数，文件中为3，手动调整为6后，重新发布，又变回了3)","style":"unordered","closed":false,"items":[]}]}]}]}]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/tasks/manage-kubernetes-objects/declarative-config/\" data-title=\"\">声明式对象配置</footnote>","style":"unordered","closed":false,"items":[{"content":"例子","style":"unordered","closed":false,"items":[{"content":"kubectl diff -f configs/\nkubectl apply -f configs/","style":"unordered","closed":false,"items":[]},{"content":"kubectl diff -R -f configs/\nkubectl apply -R -f configs/","style":"unordered","closed":false,"items":[]}]},{"content":"权衡","style":"unordered","closed":false,"items":[{"content":"与指令式对象配置相比","style":"unordered","closed":false,"items":[{"content":"优点：","style":"unordered","closed":false,"items":[{"content":"对活动对象所做的更改即使未合并到配置文件中，也会被保留下来。","style":"unordered","closed":false,"items":[]},{"content":"声明性对象配置更好地支持对目录进行操作并自动检测每个文件的操作类型(创建，修补，删除)。","style":"unordered","closed":false,"items":[]}]},{"content":"缺点：","style":"unordered","closed":false,"items":[{"content":"声明式对象配置难于调试并且出现异常时结果难以解释。","style":"unordered","closed":false,"items":[]},{"content":"使用diff产生的部分更新会创建复杂的合并和布丁操作。","style":"unordered","closed":false,"items":[]}]}]}]}]},{"content":"分析工作场景，选择合适的方案","style":"unordered","closed":false,"items":[{"content":"运维中要解决的问题","style":"unordered","closed":false,"items":[{"content":"1.审计，谁在什么时间做了什么操作，达到了什么效果","style":"unordered","closed":false,"items":[]},{"content":"2.可重复执行，相同的操作重复执行，结果不变","style":"unordered","closed":false,"items":[]},{"content":"3.可回滚","style":"unordered","closed":false,"items":[{"content":"便捷且安全的回滚方案，支持单个应用和多个相关应用的回滚。","style":"unordered","closed":false,"items":[]},{"content":"命令如何回滚，配置如何回滚？","style":"unordered","closed":false,"items":[]}]},{"content":"4.版本控制，版本差异的比对","style":"unordered","closed":false,"items":[]},{"content":"5.CI/CD\n-","style":"unordered","closed":false,"items":[]}]}]}]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/names/\" data-title=\"\">对象名称和IDs</footnote>id:: 62638d0b-e442-4e7d-bf15-8874f56955cb\ncollapsed:: true","style":"unordered","closed":false,"items":[{"content":"名称 集群中的每一个对象都有一个名称 来标识在同类资源中的唯一性。","style":"unordered","closed":false,"items":[{"content":"DNS子域名","style":"unordered","closed":false,"items":[{"content":"不能超过253个字符","style":"unordered","closed":false,"items":[]},{"content":"只能包含小写字母、数字，以及'-' 和 '.'","style":"unordered","closed":false,"items":[]},{"content":"须以字母数字开头","style":"unordered","closed":false,"items":[]},{"content":"须以字母数字结尾","style":"unordered","closed":false,"items":[]}]},{"content":"RFC 1123","style":"unordered","closed":false,"items":[{"content":"最多 63 个字符","style":"unordered","closed":false,"items":[]},{"content":"只能包含小写字母、数字，以及 '-'","style":"unordered","closed":false,"items":[]},{"content":"须以字母数字开头","style":"unordered","closed":false,"items":[]},{"content":"须以字母数字结尾","style":"unordered","closed":false,"items":[]}]},{"content":"RFC 1035","style":"unordered","closed":false,"items":[]},{"content":"路径分段名称","style":"unordered","closed":false,"items":[]}]},{"content":"UIDs 每个 Kubernetes 对象也有一个UID 来标识在整个集群中的唯一性。","style":"unordered","closed":false,"items":[]}]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/namespaces/\" data-title=\"\">命名空间</footnote>id:: 62638d0b-7c8b-424a-be77-3df5bd50c77f","style":"unordered","closed":false,"items":[]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/labels/\" data-title=\"\">标签和选择算符</footnote>","style":"unordered","closed":false,"items":[]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/annotations/\" data-title=\"\">注释</footnote>","style":"unordered","closed":false,"items":[]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/finalizers/\" data-title=\"\">Finalizers</footnote>","style":"unordered","closed":false,"items":[]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/field-selectors/\" data-title=\"\">字段选择器</footnote>","style":"unordered","closed":false,"items":[]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/owners-dependents/\" data-title=\"\">属主与附属</footnote>","style":"unordered","closed":false,"items":[]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/common-labels/\" data-title=\"\">推荐时间用的标签</footnote>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<footnote data-note=\"https://kubernetes.io/zh/docs/concepts/services-networking/\" data-title=\"\">服务、负载均衡和联网</footnote>collapsed:: true","style":"unordered","closed":false,"items":[{"content":"Ingress","style":"unordered","closed":false,"items":[{"content":"<footnote data-note=\"https://kubernetes.github.io/ingress-nginx/deploy/\" data-title=\"\">Ingress nginx</footnote>","style":"unordered","closed":false,"items":[{"content":"部署命令：<del>~shell\nkubectl apply -f <a href=\"https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.2.0/deploy/static/provider/cloud/deploy.yaml\">https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.2.0/deploy/static/provider/cloud/deploy.yaml</a></del>~","style":"unordered","closed":false,"items":[]},{"content":"使用到的镜像","style":"unordered","closed":false,"items":[{"content":"k8s.gcr.io/ingress-nginx/controller:v1.2.0","style":"unordered","closed":false,"items":[]},{"content":"k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1","style":"unordered","closed":false,"items":[]},{"content":"registry.cn-hangzhou.aliyuncs.com/google_containers/nginx-ingress-controller:v1.2.0","style":"unordered","closed":false,"items":[]},{"content":"registry.cn-hangzhou.aliyuncs.com/google_containers/kube-webhook-certgen:v1.1.1\n-","style":"unordered","closed":false,"items":[]}]}]}]},{"content":"Ingress控制器\n-\n-\n-","style":"unordered","closed":false,"items":[]}]}]}]},"common":{"quote":false}}],"typeset":"basic","layout":"print","basic":{"title":"","cover":"","summary":""}}