{"content":[{"key":"header","data":{"content":"<span>kubernetes</span>","level":1},"common":{"quote":false}},{"key":"list","data":{"style":"unordered","items":[{"content":"<span>概念</span>","style":"unordered","closed":false,"items":[{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/\"><span>概述</span></a></span>","style":"unordered","closed":false,"items":[{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/what-is-kubernetes/\"><span>Kubernetes是什么? </span></a></span>","style":"unordered","closed":false,"items":[{"content":"<span>时光回溯</span>","style":"unordered","closed":false,"items":[{"content":"![image.png](https://d33wubrfki0l68.cloudfront.net/26a177ede4d7b032362289c6fccd448fc4a91174/eb693/images/docs/container_evolution.svg)","style":"unordered","closed":false,"items":[]},{"content":"<span>传统部署时代</span>","style":"unordered","closed":false,"items":[{"content":"<span>例如：安装Oracle</span>","style":"unordered","closed":false,"items":[{"content":"<span>针对操作系统准备安装包(下载或者U盘拷贝)</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>安装Oracle需要的基础类库</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>配置操作系统的相应配置</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>执行安装检查，安装命令</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>安装失败之后，要完全卸载</span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span>虚拟化部署时代</span>","style":"unordered","closed":false,"items":[{"content":"<span>只是做了物理资源隔离，安装一个Oracle仍旧是个复杂的过程。</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>容器部署时代</span>","style":"unordered","closed":false,"items":[{"content":"<span>敏捷应用程序的创建和部署</span>","style":"unordered","closed":false,"items":[{"content":"<span>关注点在如何构建应用程序的镜像以及启动镜像时的参数配置</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>持续开发、集成和部署</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>关注开发和运维的分离</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>可观察性</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>跨开发、测试和生产环境的一致性</span>","style":"unordered","closed":false,"items":[{"content":"<span>可以使用同样的构建产物，在不同的环境上运行，只是启动参数的差异。</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>跨云和操作系统发型版本的可移植性</span>","style":"unordered","closed":false,"items":[{"content":"<span>容器运行环境解决了不同的云和操作系统之间的差异</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>以应用程序为中心的管理</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>松耦合、分布式、弹性、解放的微服务</span>","style":"unordered","closed":false,"items":[{"content":"<span>应用跟硬件，操作系统，网络都没有关系</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>弹性：副本数可伸缩</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>资源隔离</span>","style":"unordered","closed":false,"items":[{"content":"<span>每个应用使用的资管互不影响</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>资源利用</span>","style":"unordered","closed":false,"items":[{"content":"<span>一个应用的资源利用不是固定的，例如启动一个应用的最低配置和最大需要的配置等。</span>","style":"unordered","closed":false,"items":[]}]}]}]},{"content":"<span>为什么需要Kubernetes,它能做什么?</span><span></span><span>服务发现和负载均衡</span>","style":"unordered","closed":false,"items":[{"content":"","style":"unordered","closed":false,"items":[{"content":"<span>微服务的两大基石</span>","style":"unordered","closed":false,"items":[{"content":"<span>RPC</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>消息</span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span>存储编排</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>自动部署和回滚</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>自动完成装箱计算</span>","style":"unordered","closed":false,"items":[{"content":"<span>背包问题</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>自我修复</span>","style":"unordered","closed":false,"items":[{"content":"<span>传统部署方案需要写定时任务来做应用健康检查和自我修复</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>秘钥与配置管理</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>Kubernetes不是什么</span><span></span><span>不限制支持的应用类型。</span>","style":"unordered","closed":false,"items":[{"content":"<span>不部署源代码,也不构建你的应用程序。</span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/components/\"><span>Kubernetes组件<del>​</del></span></a></span>","style":"unordered","closed":false,"items":[{"content":"![image.png](https://d33wubrfki0l68.cloudfront.net/2475489eaf20163ec0f54ddc1d92aa8d4c87c96b/e7c81/images/docs/components-of-kubernetes.svg)","style":"unordered","closed":false,"items":[]},{"content":"<span>控制平面组件(Control Plane Components)</span>","style":"unordered","closed":false,"items":[{"content":"<span>kube-apiserver</span>","style":"unordered","closed":false,"items":[{"content":"<span>该组件公开了 Kubernetes API</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>支持水平扩展</span>","style":"unordered","closed":true,"items":[{"content":"<span>x轴扩展 增加副本数 ✔️</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>y轴扩展 功能、业务拆分成不同的微服务</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>z轴扩展 数据分片，租户隔离</span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span>etcd</span>","style":"unordered","closed":false,"items":[{"content":"<span>etcd 是兼具一致性和高可用性的键值数据库</span>","style":"unordered","closed":false,"items":[{"content":"<span>一致性✔️</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>高可用 ✔️</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>分区容错 X</span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span>kube-scheduler</span>","style":"unordered","closed":false,"items":[{"content":"<span>负责监视新创建的、未指定运行节点的 Pods，选择节点让 Pod 在上面运行。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>调度决策考虑的因素包括</span>","style":"unordered","closed":false,"items":[{"content":"<span>单个 Pod 和 Pods 集合的资源需求</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>硬件/软件/策略约束</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>亲和性和反亲和性规范</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>数据位置</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>工作负载间的干扰和最后时限</span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span>kube-controller-manager</span><span></span><span>节点控制器（Node Controller）: 负责在节点出现故障时进行通知和响应</span>","style":"unordered","closed":false,"items":[{"content":"<span>任务控制器（Job controller）: 监测代表一次性任务的 Job 对象，然后创建 Pods 来运行这些任务直至完成</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>端点控制器（Endpoints Controller）: 填充端点(Endpoints)对象(即加入 Service 与 Pod)</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>服务帐户和令牌控制器（Service Account &amp; Token Controllers）: 为新的命名空间创建默认帐户和 API 访问令牌</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>cloud-controller-manager</span><span></span><span>节点控制器（Node Controller）: 用于在节点终止响应后检查云提供商以确定节点是否已被删除</span>","style":"unordered","closed":false,"items":[{"content":"<span>路由控制器（Route Controller）: 用于在底层云基础架构中设置路由</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>服务控制器（Service Controller）: 用于创建、更新和删除云提供商负载均衡器</span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span>Node组件</span>","style":"unordered","closed":false,"items":[{"content":"<span>kubelet</span>","style":"unordered","closed":false,"items":[{"content":"<span>一个在集群中每个节点上运行的代理。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>它保证容器（containers）都 运行在 Pod 中。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>kubelet 接收一组通过各类机制提供给它的 PodSpecs，确保这些 PodSpecs 中描述的容器处于运行状态且健康。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>kubelet 不会管理不是由 Kubernetes 创建的容器。</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>kube-proxy</span>","style":"unordered","closed":false,"items":[{"content":"<span>是集群中每个节点上运行的网络代理</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>维护节点上的网络规则</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>如果操作系统提供了数据包过滤层并可用的话，kube-proxy 会通过它(例如[[iptables]])来实现网络规则。否则， kube-proxy 仅转发流量本身。</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>容器运行时(Container Runtime)</span>","style":"unordered","closed":false,"items":[{"content":"<span>containerd</span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span>插件(Addon)</span>","style":"unordered","closed":false,"items":[{"content":"<span>DNS</span>","style":"unordered","closed":false,"items":[{"content":"<span>集群 DNS 是一个 DNS 服务器，和环境中的其他 DNS 服务器一起工作，它为 Kubernetes 服务提供 DNS 记录。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>Kubernetes 启动的容器自动将此 DNS 服务器包含在其 DNS 搜索列表中。</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>Web界面(仪表盘)</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>容器资源监控</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>集群层面日志</span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/kubernetes-api/\"><span>KubernetesAPI</span></a></span><span></span><span>OpenAPI规范</span>","style":"unordered","closed":false,"items":[{"content":"","style":"unordered","closed":false,"items":[{"content":"<span>OpenAPI V2</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>OpenAPI V3</span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/\"><span>使用Kubernetes对象</span></a></span>","style":"unordered","closed":false,"items":[{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/kubernetes-objects/\"><span>理解Kubernetes对象</span></a></span>","style":"unordered","closed":false,"items":[{"content":"<span>总结</span>","style":"unordered","closed":false,"items":[{"content":"<span>Kubernetes 对象是持久化的实体</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>Kubernetes 使用这些实体去表示整个集群的状态</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>达成的效果：</span>","style":"unordered","closed":false,"items":[{"content":"<span>哪些容器化应用在运行（以及在哪些节点上）</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>可以被应用使用的资源</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>关于应用运行时表现的策略，比如重启策略、升级策略，以及容错策略</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>Kubernetes 对象是 “目标性记录” —— 一旦创建对象，Kubernetes 系统将持续工作以确保对象存在。 通过创建对象，本质上是在告知 Kubernetes 系统，所需要的集群工作负载看起来是什么样子的， 这就是 Kubernetes 集群的 期望状态（Desired State）。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>所有对Kubernetes对象的操作，最终都是通过使用 Kubernetes API</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>对象规约（Spec）与状态（Status）</span>","style":"unordered","closed":false,"items":[{"content":"<span>Spec： 对象期望状态（Desired State）。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>Status：对象当前状态（Current State）</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>描述 Kubernetes 对象</span>","style":"unordered","closed":false,"items":[{"content":"<span>多数情况下是使用yaml文件描述。</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>必需字段</span>","style":"unordered","closed":false,"items":[{"content":"<span>apiVersion - 创建该对象所使用的 Kubernetes API 的版本</span>","style":"unordered","closed":false,"items":[{"content":"<span>例如：apps/v1</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>kind - 想要创建的对象的类别</span>","style":"unordered","closed":false,"items":[{"content":"<span>例如：Pod，Deployment，Service</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>metadata - 帮助唯一性标识对象的一些数据，包括一个 name 字符串、UID 和可选的 namespac</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>spec - 你所期望的该对象的状态，对象 spec 的精确格式对每个 Kubernetes 对象来说是不同的。</span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/object-management/\"><span>Kubernetes对象管理</span></a></span><span></span><span>管理技巧</span>","style":"unordered","closed":false,"items":[{"content":"<span><span>管理技术</span></span><span><span>作用于</span></span><span><span>建议的环境</span></span><span><span>支持的写者</span></span><span><span>学习难度</span></span><span><span>指令式命令</span></span><span><span>活跃对象</span></span><span><span>开发项目</span></span><span><span>1+</span></span><span><span>最低</span></span><span><span>指令式对象配置</span></span><span><span>单个文件</span></span><span><span>生产项目</span></span><span><span>1</span></span><span><span>中等</span></span><span><span>声明式对象配置</span></span><span><span>文件目录</span></span><span><span>生产项目</span></span><span><span>1+</span></span><span><span>最高</span></span>","style":"unordered","closed":false,"items":[]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/tasks/manage-kubernetes-objects/imperative-command/\"><span>指令式命令</span></a></span>","style":"unordered","closed":false,"items":[{"content":"<span>例子</span><span>kubectl create deployment nginx --image nginx</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>权衡</span>","style":"unordered","closed":false,"items":[{"content":"<span>与对象配置相比的有点：</span>","style":"unordered","closed":false,"items":[{"content":"<span>命令简单，易学且易于记忆。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>命令仅需一步即可对集群进行更改。</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>与对象配置相比的缺点：</span>","style":"unordered","closed":false,"items":[{"content":"<span>命令不便于与变更审查流程的集成。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>命令不提供与更改关联的审核跟踪。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>除了实时内容外，命令不提供记录原。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>明星不提供用于创建新对象的模板。</span>","style":"unordered","closed":false,"items":[]}]}]}]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/tasks/manage-kubernetes-objects/imperative-config/\"><span>指令式对象配置</span></a></span>","style":"unordered","closed":false,"items":[{"content":"<span>例子</span>","style":"unordered","closed":false,"items":[{"content":"<span>kubectl create -f nginx.yaml</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>kubectl delete -f nginx.yaml -f redis.yaml</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>kubectl replace -f nginx.yaml</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>权衡</span>","style":"unordered","closed":false,"items":[{"content":"<span>与执行令式命令相比</span>","style":"unordered","closed":false,"items":[{"content":"<span>优点：</span>","style":"unordered","closed":false,"items":[{"content":"<span>对象配置可以存储在源控制系统中，比如Git。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>对象配置可以与流程集成，例如在推送和审计之前检查更新。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>对象配置提供了用于创建新对象的模板。</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>缺点：</span>","style":"unordered","closed":false,"items":[{"content":"<span>对象配置需要对对象架构有基本的了解。(不算缺点)</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>对象配置需要额外的步骤来编写yaml文件。</span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span>与声明式对象配置相比：</span>","style":"unordered","closed":false,"items":[{"content":"<span>优点：</span>","style":"unordered","closed":false,"items":[{"content":"<span>指令式对象配置行为更加简单易懂。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>从 Kubernetes 1.5 版本开始，指令对象配置更加成熟。</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>缺点：</span>","style":"unordered","closed":false,"items":[{"content":"<span>指令式对象配置更适合文件，而非目录。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>对活动对象的更新，必须反应在配置文件中，否则会在下一次替换时丢失。(比如副本数，文件中为3，手动调整为6后，重新发布，又变回了3)</span>","style":"unordered","closed":false,"items":[]}]}]}]}]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/tasks/manage-kubernetes-objects/declarative-config/\"><span>声明式对象配置</span></a></span>","style":"unordered","closed":false,"items":[{"content":"<span>例子</span>","style":"unordered","closed":false,"items":[{"content":"<span>kubectl diff -f configs/</span><span></span><span>kubectl apply -f configs/</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>kubectl diff -R -f configs/</span><span></span><span>kubectl apply -R -f configs/</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>权衡</span>","style":"unordered","closed":false,"items":[{"content":"<span>与指令式对象配置相比</span>","style":"unordered","closed":false,"items":[{"content":"<span>优点：</span>","style":"unordered","closed":false,"items":[{"content":"<span>对活动对象所做的更改即使未合并到配置文件中，也会被保留下来。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>声明性对象配置更好地支持对目录进行操作并自动检测每个文件的操作类型(创建，修补，删除)。</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>缺点：</span>","style":"unordered","closed":false,"items":[{"content":"<span>声明式对象配置难于调试并且出现异常时结果难以解释。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>使用diff产生的部分更新会创建复杂的合并和布丁操作。</span>","style":"unordered","closed":false,"items":[]}]}]}]}]},{"content":"<span>分析工作场景，选择合适的方案</span>","style":"unordered","closed":false,"items":[{"content":"<span>运维中要解决的问题</span>","style":"unordered","closed":false,"items":[{"content":"<span>1.审计，谁在什么时间做了什么操作，达到了什么效果</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>2.可重复执行，相同的操作重复执行，结果不变</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>3.可回滚</span>","style":"unordered","closed":false,"items":[{"content":"<span>便捷且安全的回滚方案，支持单个应用和多个相关应用的回滚。</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>命令如何回滚，配置如何回滚？</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>4.版本控制，版本差异的比对</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>5.CI/CD</span><span></span><span>-</span>","style":"unordered","closed":false,"items":[]}]}]}]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/names/\"><span>对象名称和IDs</span></a></span><span></span><span>名称 集群中的每一个对象都有一个名称 来标识在同类资源中的唯一性。</span>","style":"unordered","closed":false,"items":[{"content":"","style":"unordered","closed":false,"items":[{"content":"<span>DNS子域名</span>","style":"unordered","closed":false,"items":[{"content":"<span>不能超过253个字符</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>只能包含小写字母、数字，以及'-' 和 '.'</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>须以字母数字开头</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>须以字母数字结尾</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>RFC 1123</span>","style":"unordered","closed":false,"items":[{"content":"<span>最多 63 个字符</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>只能包含小写字母、数字，以及 '-'</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>须以字母数字开头</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>须以字母数字结尾</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>RFC 1035</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>路径分段名称</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span>UIDs 每个 Kubernetes 对象也有一个UID 来标识在整个集群中的唯一性。</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/namespaces/\"><span>命名空间</span></a></span>","style":"unordered","closed":false,"items":[]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/labels/\"><span>标签和选择算符</span></a></span>","style":"unordered","closed":false,"items":[]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/annotations/\"><span>注释</span></a></span>","style":"unordered","closed":false,"items":[]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/finalizers/\"><span>Finalizers</span></a></span>","style":"unordered","closed":false,"items":[]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/field-selectors/\"><span>字段选择器</span></a></span>","style":"unordered","closed":false,"items":[]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/owners-dependents/\"><span>属主与附属</span></a></span>","style":"unordered","closed":false,"items":[]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/common-labels/\"><span>推荐时间用的标签</span></a></span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span><a href=\"https://kubernetes.io/zh/docs/concepts/services-networking/\"><span>服务、负载均衡和联网</span></a></span>","style":"unordered","closed":false,"items":[{"content":"<span>Ingress</span>","style":"unordered","closed":false,"items":[{"content":"<span><a href=\"https://kubernetes.github.io/ingress-nginx/deploy/\"><span>Ingress nginx</span></a></span>","style":"unordered","closed":false,"items":[{"content":"<span>部署命令：</span><span>kubectl apply <span>-f</span> https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.2.0/deploy/static/provider/cloud/deploy.yaml</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>使用到的镜像</span>","style":"unordered","closed":false,"items":[{"content":"<span>k8s.gcr.io/ingress-nginx/controller:v1.2.0</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>registry.cn-hangzhou.aliyuncs.com/google_containers/nginx-ingress-controller:v1.2.0</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>registry.cn-hangzhou.aliyuncs.com/google_containers/kube-webhook-certgen:v1.1.1</span><span></span><span>-</span>","style":"unordered","closed":false,"items":[]}]}]}]},{"content":"<span>Ingress控制器</span><span></span><br>","style":"unordered","closed":false,"items":[]}]}]}]},"common":{"quote":false}}],"typeset":"basic","layout":"print","basic":{"title":"","cover":"","summary":""}}