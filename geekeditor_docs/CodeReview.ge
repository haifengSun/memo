{"content":[{"key":"header","data":{"content":"<span>code review</span>","level":1},"common":{"quote":false}},{"key":"list","data":{"style":"unordered","items":[{"content":"<span>整体框架</span><span></span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>bean</code></span>","style":"unordered","closed":false,"items":[{"content":"<span><code>NerResult</code></span><span>：接收前端传递的</span><span><code>ner</code></span><span>的结果</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>SessionEntity</code></span><span>：前后端交互实体</span><span> &nbsp; &nbsp;</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><span>private</span> <span>String</span> <span>robotId</span>;</span><br><span> &nbsp; &nbsp;<span>private</span> <span>String</span> <span>openId</span>;</span><br><span> &nbsp; &nbsp;<span>private</span> <span>String</span> <span>sessionId</span>;</span><br><span> &nbsp; &nbsp;<span>private</span> <span>long</span> <span>msgTimestamp</span>;</span><br><span> &nbsp; &nbsp;<span>private</span> <span>int</span> <span>msgType</span>;<span>//int, 信息类型，0文本，1图片</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>String</span> <span>sessionState</span>; <span>//查询状态并set</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>String</span> <span>msgText</span>; <span>//str, 文本消息，如果msg_type==0，则取该字段内容</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>int</span> <span>msgNo</span>; <span>//int, 消息编号，传空参数，对于msg_no&gt;1000，不处理，直接结束。</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>NerResult</span> <span>nerResult</span>; <span>// ner返回的数据，只有文本有</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>String</span> <span>sessionEvent</span>;<span>//sessionEvent</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>int</span> <span>serviceMsgType</span>;<span>//0:房颤json；1：String；2：图片;3:食谱推荐</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>String</span> <span>serviceMsgText</span>;<span>//返回文本</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>List</span><span>&lt;</span><span>String</span><span>&gt;</span> <span>guessList</span>;<span>//猜你想说</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>String</span> <span>componentName</span>;<span>//控件名称</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>List</span><span>&lt;</span><span>String</span><span>&gt;</span> <span>componentData</span>;<span>//控件数据</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>String</span> <span>placeHolder</span>;<span>//输入框内容</span></span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>State</code></span><span>：状态</span><span><span>@Data</span></span><br><span><span>public</span> <span>class</span> <span>State</span> {</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>String</span> <span>state</span> <span>=</span> <span>\"S0\"</span>;</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>//上下文</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>Map</span><span>&lt;</span><span>String</span>, <span>String</span><span>&gt;</span> <span>context</span>;</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>//待获取的数据列表</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>List</span><span>&lt;</span><span>String</span><span>&gt;</span> <span>Todo</span>;</span><br><span><span></span></span><br><span>}</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>StateTransition</code></span><span>：状态转换，用于从数据库的</span><span><code>t_state_transition</code></span><span>表映射实体类</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>UserBean</code></span><span>：用户信息，用于从数据库的</span><span><code>dynamic_user_data</code></span><span>和</span><span><code>static_user_data</code></span><span>表映射实体类</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span><code>config</code></span>","style":"unordered","closed":false,"items":[{"content":"<span><code>AppletConfig</code></span><span>：微信小程序获取</span><span><code>openid</code></span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>RedisConfig</code></span><span>：</span><span><code>redis</code></span><span>配置文件</span><span><span>@Configuration</span></span><br><span><span>@EnableCaching</span></span><br><span><span>public</span> <span>class</span> <span>RedisConfig</span> <span>extends</span> <span>CachingConfigurerSupport</span> {</span><br><span> &nbsp; &nbsp;<span>@Bean</span>(<span>name</span> <span>=</span> <span>\"redisTemplate\"</span>)</span><br><span> &nbsp; &nbsp;<span>public</span> <span>RedisTemplate</span><span>&lt;</span><span>String</span>, <span>Object</span><span>&gt;</span> <span>redisTemplate</span>(<span>RedisConnectionFactory</span> <span>redisConnectionFactory</span>){</span><br><span><span></span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>RedisTemplate</span><span>&lt;</span><span>String</span>, <span>Object</span><span>&gt;</span> <span>redisTemplate</span> <span>=</span> <span>new</span> <span>RedisTemplate</span><span>&lt;&gt;</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>//参照StringRedisTemplate内部实现指定序列化器</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>redisTemplate</span>.<span>setConnectionFactory</span>(<span>redisConnectionFactory</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>redisTemplate</span>.<span>setKeySerializer</span>(<span>keySerializer</span>());</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>redisTemplate</span>.<span>setHashKeySerializer</span>(<span>keySerializer</span>());</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>redisTemplate</span>.<span>setValueSerializer</span>(<span>valueSerializer</span>());</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>redisTemplate</span>.<span>setHashValueSerializer</span>(<span>valueSerializer</span>());</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>redisTemplate</span>;</span><br><span> &nbsp; &nbsp;}</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>RedisSerializer</span><span>&lt;</span><span>String</span><span>&gt;</span> <span>keySerializer</span>(){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>new</span> <span>StringRedisSerializer</span>();</span><br><span> &nbsp; &nbsp;}</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>//使用Jackson序列化器</span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>RedisSerializer</span><span>&lt;</span><span>Object</span><span>&gt;</span> <span>valueSerializer</span>(){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>new</span> <span>GenericJackson2JsonRedisSerializer</span>();</span><br><span> &nbsp; &nbsp;}</span><br><span><span></span></span><br><span>}</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>RestTemplateConfig</code></span><span>：配置</span><span><code>RestTemplate</code></span><span><code>RestTemplate</code></span><span> 是一个同步的 </span><span><code>Rest API</code></span><span>客户端</span><span><span>@Configuration</span></span><br><span><span>public</span> <span>class</span> <span>RestTemplateConfig</span> {</span><br><span> &nbsp; &nbsp;<span>@Bean</span></span><br><span> &nbsp; &nbsp;<span>public</span> <span>RestTemplate</span> <span>restTemplate</span>(<span>ClientHttpRequestFactory</span> <span>factory</span>){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>new</span> <span>RestTemplate</span>(<span>factory</span>);</span><br><span> &nbsp; &nbsp;}</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>@Bean</span></span><br><span> &nbsp; &nbsp;<span>public</span> <span>ClientHttpRequestFactory</span> <span>simpleClientHttpRequestFactory</span>(){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>SimpleClientHttpRequestFactory</span> <span>factory</span> <span>=</span> <span>new</span> <span>SimpleClientHttpRequestFactory</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>factory</span>.<span>setConnectTimeout</span>(<span>15000</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>factory</span>.<span>setReadTimeout</span>(<span>5000</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>factory</span>;</span><br><span> &nbsp; &nbsp;}</span><br><span>}</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>ValueConfig</code></span><span>：从配置文件</span><span><code>value.properties</code></span><span>中读取值</span><span><span>@Configuration</span></span><br><span><span>public</span> <span>class</span> <span>ValueConfig</span> {</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>Properties</span> <span>p</span> <span>=</span> <span>new</span> <span>Properties</span>();</span><br><span><span></span></span><br><span><span> &nbsp; &nbsp;</span><span>//通过字节流的方式进行文件的读写</span></span><br><span> &nbsp; &nbsp;<span>//InputStreamReader类是从字节流到字符流的桥接器：它使用指定的字符集读取字节并将它们解码为字符。</span></span><br><span> &nbsp; &nbsp;<span>public</span> <span>ValueConfig</span>() <span>throws</span> <span>IOException</span> {</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>FileInputStream</span> <span>fis</span> <span>=</span> <span>new</span> <span>FileInputStream</span>(<span>\"src/main/resources/value.properties\"</span>);<span>//TODO ClassLoader</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>InputStreamReader</span> <span>isr</span> <span>=</span> <span>new</span> <span>InputStreamReader</span>(<span>fis</span>, <span>\"GBK\"</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>p</span>.<span>load</span>(<span>isr</span>);</span><br><span> &nbsp; &nbsp;}</span><br><span> &nbsp; &nbsp;</span><br><span> &nbsp; &nbsp;<span>//方法体中调用方式示例</span></span><br><span> &nbsp; &nbsp;<span>function</span>(){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>String</span> <span>s</span> <span>=</span> <span>p</span>.<span>getProperty</span>(<span>\"S705.componentname\"</span>);</span><br><span> &nbsp; &nbsp;}</span><br><span>}</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span><code>controller</code></span><span>：</span>","style":"unordered","closed":false,"items":[{"content":"<span><code>GaiaAPIController</code></span><span>：提供</span><span><code>API</code></span><span>给前端调用</span>","style":"unordered","closed":false,"items":[{"content":"<span><code>health()</code></span><span>：判断服务是否挂掉</span><span> &nbsp; &nbsp;<span>@GetMapping</span>(<span>\"/health\"</span>)</span><br><span> &nbsp; &nbsp;<span>public</span> <span>String</span> <span>health</span>(){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>\"everything is OK!\"</span>;</span><br><span> &nbsp; &nbsp;}</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>login()</code></span><span>：获取</span><span><code>openid</code></span><span>传递给前端</span><span> &nbsp; &nbsp;<span>@GetMapping</span>(<span>\"/login\"</span>)</span><br><span> &nbsp; &nbsp;<span>public</span> <span>Map</span> <span>login</span>(<span>@RequestParam</span>(<span>\"code\"</span>) <span>String</span> <span>js_code</span>) <span>throws</span> <span>JsonProcessingException</span> {</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>log</span>.<span>info</span>(<span>js_code</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>String</span> <span>reStr</span> <span>=</span> <span>restTemplate</span>.<span>getForObject</span>(<span>appletConfig</span>.<span>getCodeSessionUrl</span>(),</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>String</span>.<span>class</span>,</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>appletConfig</span>.<span>getAppId</span>(),</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>appletConfig</span>.<span>getAppSecret</span>(),</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>js_code</span>,</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>appletConfig</span>.<span>getCodeSessionGrantType</span>());</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>ObjectMapper</span> <span>mapper</span> <span>=</span> <span>new</span> <span>ObjectMapper</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>Map</span> <span>resMap</span> <span>=</span> <span>mapper</span>.<span>readValue</span>(<span>reStr</span>, <span>Map</span>.<span>class</span>);</span><br><span><span></span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>resMap</span>;</span><br><span> &nbsp; &nbsp;}</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>textMana</code></span><span>：文本信息管理</span><span> &nbsp; &nbsp;<span>@PostMapping</span>(<span>\"/textMana\"</span>)</span><br><span> &nbsp; &nbsp;<span>public</span> <span>SessionEntity</span> <span>textMana</span>(<span>@RequestBody</span> <span>SessionEntity</span> <span>sessionEntity</span>){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>//获取前端传递的sessionentity</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>SessionEntity</span> <span>sessionEntity1</span> <span>=</span> <span>getArgsOfSessionEntity</span>(<span>sessionEntity</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>try</span>{</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>//实例化状态机</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>smEngineCore</span> <span>c</span> <span>=</span> <span>smInstance</span>.<span>instance</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>log</span>.<span>info</span>(<span>String</span>.<span>valueOf</span>(<span>c</span>));</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>//从redis中读取该用户上次的state</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>State</span> <span>state</span> <span>=</span> (<span>State</span>) <span>redisTemplate</span>.<span>opsForValue</span>().<span>get</span>(<span>sessionEntity1</span>.<span>getSessionId</span>());</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>if</span>(<span>\"reset\"</span>.<span>equals</span>(<span>sessionEntity1</span>.<span>getMsgText</span>()) <span>||</span> <span>\"重置\"</span>.<span>equals</span>(<span>sessionEntity1</span>.<span>getMsgText</span>())){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>state</span> <span>=</span> <span>new</span> <span>State</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>c</span>.<span>setState</span>(<span>state</span>);</span><br><span><span>// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;c.onEvent(\"E0_0\",new T2Action(\"S0\",\"S0\",\"E0_0\",c,sessionEntity1));</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>c</span>.<span>onEvent</span>(<span>\"E0_0\"</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}<span>else</span>{</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>if</span>(<span>state</span> <span>==</span> <span>null</span>){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>state</span> <span>=</span> <span>new</span> <span>State</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>log</span>.<span>info</span>(<span>\"prestate --&gt;\"</span> <span>+</span> <span>state</span>.<span>getState</span>());</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>sessionEntity1</span>.<span>setSessionState</span>(<span>state</span>.<span>getState</span>());</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>c</span>.<span>setState</span>(<span>state</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>log</span>.<span>info</span>(<span>String</span>.<span>valueOf</span>(<span>c</span>.<span>getState</span>()));</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>//从数据库中获取当前状态对应的下一个event</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>StateTransition</span> <span>st</span> <span>=</span> <span>TransitionUtils</span>.<span>getStateTrans</span>(<span>sessionEntity1</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>//根据action的名称反射类</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>Constructor</span> <span>ctr</span> <span>=</span> <span>Class</span>.<span>forName</span>(<span>\"com.qimetaverse.interactionengine.sm.\"</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>+</span> <span>st</span>.<span>getAction</span>()).<span>getDeclaredConstructor</span>(<span>State</span>.<span>class</span>, <span>State</span>.<span>class</span>, <span>String</span>.<span>class</span>, <span>smEngineCore</span>.<span>class</span>, <span>SessionEntity</span>.<span>class</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>//TODO</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>State</span> <span>preState</span> <span>=</span> <span>c</span>.<span>getTable</span>().;</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>State</span> <span>nextState</span> <span>=</span> <span>c</span>.<span>getState</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>preState</span>.<span>setState</span>(<span>st</span>.<span>getPre_state</span>());</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>nextState</span>.<span>setState</span>(<span>st</span>.<span>getNext_state</span>());</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>ActionOnState</span> <span>action</span> <span>=</span> (<span>ActionOnState</span>) <span>ctr</span>.<span>newInstance</span>(<span>preState</span>,<span>nextState</span>,<span>st</span>.<span>getEvent</span>(),<span>c</span>,<span>sessionEntity1</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>c</span>.<span>onEvent</span>(<span>st</span>.<span>getEvent</span>(),<span>action</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>log</span>.<span>info</span>(<span>\"状态机当前状态为：\"</span> <span>+</span> <span>c</span>.<span>getState</span>());</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>//将id和状态机c的当前状态存储到redis中</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>redisTemplate</span>.<span>opsForValue</span>().<span>set</span>(<span>sessionEntity1</span>.<span>getSessionId</span>(),<span>c</span>.<span>getState</span>());</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;}<span>catch</span> (<span>Exception</span> <span>e</span>){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>e</span>.<span>printStackTrace</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;}</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>sessionEntity1</span>;</span><br><span> &nbsp; &nbsp;}</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>imageMana()</code></span><span>：与</span><span><code>textMana</code></span><span>功能和实现方式类似，单独设置是为了接收</span><span><code>MultipartFile</code></span><span>类型的参数</span>","style":"unordered","closed":false,"items":[]}]}]},{"content":"<span><code>Mapper</code></span>","style":"unordered","closed":false,"items":[{"content":"<span><code>StateTransMapper</code></span><span>：使用注解配置</span><span><code>SQL</code></span><span>映射器——状态跳转</span><span><span>@Repository</span></span><br><span><span>public</span> <span>interface</span> <span>StateTransMapper</span> {</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>@Results</span>({</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>@Result</span>(<span>property</span> <span>=</span> <span>\"t_id\"</span>, <span>column</span> <span>=</span> <span>\"t_id\"</span>),</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>@Result</span>(<span>property</span> <span>=</span> <span>\"pre_state\"</span>, <span>column</span> <span>=</span> <span>\"pre_state\"</span>),</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>@Result</span>(<span>property</span> <span>=</span> <span>\"next_state\"</span>, <span>column</span> <span>=</span> <span>\"next_state\"</span>),</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>@Result</span>(<span>property</span> <span>=</span> <span>\"condition\"</span>, <span>column</span> <span>=</span> <span>\"condition\"</span>),</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>@Result</span>(<span>property</span> <span>=</span> <span>\"event\"</span>, <span>column</span> <span>=</span> <span>\"event\"</span>),</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>@Result</span>(<span>property</span> <span>=</span> <span>\"comment\"</span>, <span>column</span> <span>=</span> <span>\"comment\"</span>),</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>@Result</span>(<span>property</span> <span>=</span> <span>\"action\"</span>, <span>column</span> <span>=</span> <span>\"action\"</span>),</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>@Result</span>(<span>property</span> <span>=</span> <span>\"selectType\"</span>, <span>column</span> <span>=</span> <span>\"selectType\"</span>)</span><br><span> &nbsp; &nbsp;})</span><br><span> &nbsp; &nbsp;<span>@Select</span>(<span>\"select * from t_state_transition where t_id=#{t_id}\"</span>)</span><br><span> &nbsp; &nbsp;<span>StateTransition</span> <span>getStateTransById</span>(<span>String</span> <span>id</span>);</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>@Select</span>(<span>\"select * from t_state_transition\"</span>)</span><br><span> &nbsp; &nbsp;<span>List</span><span>&lt;</span><span>StateTransition</span><span>&gt;</span> <span>getAllStateTrans</span>();</span><br><span>}</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>UserMapper</code></span><span>：使用注解配置</span><span><code>SQL</code></span><span>映射器——用户信息，实现方式与</span><span><code>StateTransMapper</code></span><span>相同</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span><code>sm</code></span><span>：状态机</span>","style":"unordered","closed":false,"items":[{"content":"<span><code>ActionOnState</code></span><span>：接口</span><span><span>public</span> <span>interface</span> <span>ActionOnState</span> {</span><br><span> &nbsp; &nbsp;<span>State</span> <span>action</span>(<span>State</span> <span>state</span>,<span>String</span> <span>event</span>,<span>Object</span>[] <span>params</span>);</span><br><span>}</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>SimpleActionOnState</code></span><span>：</span><span><code>ActionOnState</code></span><span>接口的实现类</span><span><span>public</span> <span>class</span> <span>SimpleActionOnState</span> <span>implements</span> <span>ActionOnState</span>{</span><br><span> &nbsp; &nbsp;<span>State</span> <span>tostate</span>;</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>protected</span> <span>SessionEntity</span> <span>entity</span>;</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>public</span> <span>SimpleActionOnState</span>(<span>State</span> <span>fromstate</span>,<span>State</span> <span>tostate</span>,<span>String</span> <span>event</span>,<span>smEngineCore</span> <span>core</span>){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>this</span>.<span>tostate</span> <span>=</span> <span>tostate</span>;</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>core</span>.<span>addState</span>(<span>fromstate</span>,<span>event</span>,<span>this</span>);</span><br><span> &nbsp; &nbsp;}</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>public</span> <span>SimpleActionOnState</span>(<span>State</span> <span>fromstate</span>,<span>State</span> <span>tostate</span>,<span>String</span> <span>event</span>,<span>smEngineCore</span> <span>core</span>, <span>SessionEntity</span> <span>entity</span>){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>this</span>.<span>tostate</span> <span>=</span> <span>tostate</span>;</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>this</span>.<span>entity</span> <span>=</span> <span>entity</span>;</span><br><span> &nbsp; &nbsp;}</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>@Override</span></span><br><span> &nbsp; &nbsp;<span>public</span> <span>State</span> <span>action</span>(<span>State</span> <span>state</span>, <span>String</span> <span>event</span>, <span>Object</span>[] <span>params</span>) {</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>tostate</span>;</span><br><span> &nbsp; &nbsp;}</span><br><span>}</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>SimpleActionOnStateS</code></span><span>：</span><span><code>SimpleActionOnState</code></span><span>的子类</span><span><span>@Slf4j</span></span><br><span><span>public</span> <span>class</span> <span>SimpleActionOnStateS</span> <span>extends</span> <span>SimpleActionOnState</span>{</span><br><span> &nbsp; &nbsp;<span>public</span> <span>SimpleActionOnStateS</span>(<span>State</span> <span>fromstate</span>, <span>State</span> <span>tostate</span>, <span>String</span> <span>event</span>, <span>smEngineCore</span> <span>core</span>) {</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>super</span>(<span>fromstate</span>, <span>tostate</span>, <span>event</span>, <span>core</span>);</span><br><span> &nbsp; &nbsp;}</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>@Override</span></span><br><span> &nbsp; &nbsp;<span>public</span> <span>State</span> <span>action</span>(<span>State</span> <span>state</span>, <span>String</span> <span>event</span>, <span>Object</span>[] <span>params</span>) {</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>log</span>.<span>info</span>(<span>\"From \"</span><span>+</span><span>state</span>.<span>getState</span>()<span>+</span><span>\" to \"</span><span>+</span><span>tostate</span>.<span>getState</span>()<span>+</span><span>\" on \"</span><span>+</span><span>event</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>tostate</span>;</span><br><span> &nbsp; &nbsp;}</span><br><span>}</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>smInstance</code></span><span>：状态机实例化 TODO：给状态赋状态</span><span><span>@Slf4j</span></span><br><span><span>@Service</span></span><br><span><span>public</span> <span>class</span> <span>smInstance</span> {</span><br><span> &nbsp; &nbsp;<span>@Bean</span></span><br><span> &nbsp; &nbsp;<span>public</span> <span>static</span> <span>smEngineCore</span> <span>instance</span>(){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>smEngineCore</span> <span>c</span> <span>=</span> <span>new</span> <span>smEngineCore</span>(<span>new</span> <span>ActionOnState</span>() {</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>@Override</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>public</span> <span>State</span> <span>action</span>(<span>State</span> <span>state</span>, <span>String</span> <span>event</span>, <span>Object</span>[] <span>params</span>) {</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>log</span>.<span>info</span>(<span>\"Skipped on \"</span><span>+</span><span>event</span><span>+</span><span>\" state:\"</span><span>+</span><span>state</span><span>+</span><span>\":\"</span><span>+</span>(<span>String</span>)<span>params</span>[<span>0</span>]);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>null</span>;</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;});</span><br><span><span>// &nbsp; &nbsp; &nbsp; &nbsp;SimpleActionOnState reset = new SimpleActionOnStateS(\"S0\",\"S0\",\"E0_0\",c);</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>SqlSession</span> <span>sqlSession</span> <span>=</span> <span>MyBatisUtils</span>.<span>getSqlSession</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>StateTransMapper</span> <span>stateTransMapper</span> <span>=</span> <span>sqlSession</span>.<span>getMapper</span>(<span>StateTransMapper</span>.<span>class</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>List</span><span>&lt;</span><span>StateTransition</span><span>&gt;</span> <span>stateTransition</span> <span>=</span> <span>stateTransMapper</span>.<span>getAllStateTrans</span>();</span><br><span><span></span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>sqlSession</span>.<span>commit</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>sqlSession</span>.<span>close</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>for</span>(<span>StateTransition</span> <span>st</span> : <span>stateTransition</span>){</span><br><span><span>// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;new SimpleActionOnStateS(st.getPre_state(),st.getNext_state(),st.getEvent(),c);</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;}</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>State</span> <span>S0</span> <span>=</span> <span>new</span> <span>State</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>S0</span>.<span>setState</span>(<span>\"S0\"</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>State</span> <span>S7</span> <span>=</span> <span>new</span> <span>State</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>S7</span>.<span>setState</span>(<span>\"S7\"</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>S7</span>.<span>setTodo</span>(<span>Arrays</span>.<span>asList</span>(<span>\"1\"</span>,<span>\"height\"</span>,<span>\"weight\"</span>,<span>\"body_status\"</span>,<span>\"weeks_of_gestation\"</span>,<span>\"multiparous\"</span>,<span>\"weekly_exercise_time\"</span>));</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>State</span> <span>S70</span> <span>=</span> <span>new</span> <span>State</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>S70</span>.<span>setState</span>(<span>\"S70\"</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>new</span> <span>SimpleActionOnStateS</span>(<span>S0</span>,<span>S0</span>,<span>\"E0_0\"</span>,<span>c</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>new</span> <span>SimpleActionOnStateS</span>(<span>S0</span>,<span>S7</span>,<span>\"E0_7\"</span>,<span>c</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>new</span> <span>SimpleActionOnStateS</span>(<span>S7</span>,<span>S7</span>,<span>\"E7_7\"</span>,<span>c</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>new</span> <span>SimpleActionOnStateS</span>(<span>S7</span>,<span>S70</span>,<span>\"E7_70\"</span>,<span>c</span>);</span><br><span><span></span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>c</span>;</span><br><span> &nbsp; &nbsp;}</span><br><span>}</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>T7Action</code></span><span>：通过</span><span><code>list</code></span><span>的内容去采集对应的数据</span><span><span>@Slf4j</span></span><br><span><span>public</span> <span>class</span> <span>T7Action</span> <span>extends</span> <span>SimpleActionOnState</span>{</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>public</span> <span>T7Action</span>(<span>State</span> <span>fromstate</span>, <span>State</span> <span>tostate</span>, <span>String</span> <span>event</span>, <span>smEngineCore</span> <span>core</span>, <span>SessionEntity</span> <span>entity</span>) <span>throws</span> <span>IOException</span> {</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>super</span>(<span>fromstate</span>, <span>tostate</span>, <span>event</span>, <span>core</span>, <span>entity</span>);</span><br><span> &nbsp; &nbsp;}</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>private</span> <span>ValueConfig</span> <span>vc</span> <span>=</span> <span>new</span> <span>ValueConfig</span>();</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>@Override</span></span><br><span> &nbsp; &nbsp;<span>public</span> <span>State</span> <span>action</span>(<span>State</span> <span>state</span>, <span>String</span> <span>event</span>, <span>Object</span>[] <span>params</span>) {</span><br><span><span></span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>int</span> <span>i</span> <span>=</span> <span>Integer</span>.<span>parseInt</span>(<span>state</span>.<span>getTodo</span>().<span>get</span>(<span>0</span>));</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>String</span> <span>DataToGet</span> <span>=</span> <span>state</span>.<span>getTodo</span>().<span>get</span>(<span>i</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>while</span> (<span>!</span><span>ActionUtils</span>.<span>checkAct</span>(<span>DataToGet</span>,<span>entity</span>) <span>&amp;&amp;</span> <span>i</span> <span>!=</span> <span>state</span>.<span>getTodo</span>().<span>size</span>()){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>i</span><span>++</span>;</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>DataToGet</span> <span>=</span> <span>state</span>.<span>getTodo</span>().<span>get</span>(<span>i</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;}</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>entity</span>.<span>setServiceMsgText</span>(<span>\"告诉我你的信息：\"</span><span>+</span><span>DataToGet</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>entity</span>.<span>setComponentName</span>(<span>\"single-selector\"</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>if</span>(<span>i</span> <span>!=</span> <span>1</span> <span>&amp;&amp;</span> <span>entity</span>.<span>getMsgText</span>() <span>!=</span> <span>null</span>){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>Map</span><span>&lt;</span><span>String</span>,<span>String</span><span>&gt;</span> <span>tmpMap</span> <span>=</span> <span>state</span>.<span>getContext</span>() <span>==</span> <span>null</span> <span>?</span> <span>new</span> <span>HashMap</span><span>&lt;&gt;</span>() : <span>state</span>.<span>getContext</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>tmpMap</span>.<span>put</span>(<span>String</span>.<span>valueOf</span>(<span>i</span><span>-</span><span>1</span>),<span>entity</span>.<span>getMsgText</span>());</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>state</span>.<span>setContext</span>(<span>tmpMap</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;}</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>i</span><span>++</span>;</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>state</span>.<span>getTodo</span>().<span>set</span>(<span>0</span>,<span>String</span>.<span>valueOf</span>(<span>i</span>));</span><br><span><span>// &nbsp; &nbsp; &nbsp; &nbsp;entity.setServiceMsgText(vc.getmsgtextMap(entity.getSessionId()).get(tostate.getState()));</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>log</span>.<span>info</span>(<span>\"sessionEntity:\"</span> <span>+</span> <span>entity</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>log</span>.<span>info</span>(<span>\"From \"</span><span>+</span><span>state</span>.<span>getState</span>()<span>+</span><span>\" to \"</span><span>+</span><span>tostate</span>.<span>getState</span>()<span>+</span><span>\" on \"</span><span>+</span><span>event</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>super</span>.<span>action</span>(<span>state</span>, <span>event</span>, <span>params</span>);</span><br><span> &nbsp; &nbsp;}</span><br><span>}</span>","style":"unordered","closed":false,"items":[]}]},{"content":"<span><code>utils</code></span>","style":"unordered","closed":false,"items":[{"content":"<span><code>ActionUtils</code></span><span>：配合</span><span><code>action</code></span><span>的工具类</span><span><span>@Slf4j</span></span><br><span><span>@Component</span></span><br><span><span>public</span> <span>class</span> <span>ActionUtils</span> {</span><br><span> &nbsp; &nbsp;<span>public</span> <span>static</span> <span>boolean</span> <span>checkAct</span>(<span>String</span> <span>s</span>, <span>SessionEntity</span> <span>se</span>){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>boolean</span> <span>ans</span>;</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>if</span>(<span>s</span>.<span>equals</span>(<span>\"height\"</span>)){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>ans</span> <span>=</span> <span>TransitionUtils</span>.<span>can_grow_taller</span>(<span>se</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>ans</span>;</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;}<span>else</span> <span>if</span>(<span>s</span>.<span>equals</span>(<span>\"weeks_of_gestation\"</span>) <span>||</span><span>s</span>.<span>equals</span>(<span>\"multiparous\"</span>)){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>ans</span> <span>=</span> <span>\"已孕\"</span>.<span>equals</span>(<span>TransitionUtils</span>.<span>getDataByIDWithRequest</span>(<span>se</span>.<span>getSessionId</span>(),<span>s</span>));</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>ans</span>;</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;}</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>true</span>;</span><br><span> &nbsp; &nbsp;}</span><br><span>}</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>MyBatisUtils</code></span><span>：根据</span><span><code>mybatis-config.xml</code></span><span>文件配置</span><span><code>mybatis</code></span><span><span>public</span> <span>class</span> <span>MyBatisUtils</span> {</span><br><span> &nbsp; &nbsp;<span>static</span> <span>SqlSessionFactory</span> <span>sqlSessionFactory</span> <span>=</span> <span>null</span>;</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>static</span> {</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>try</span> {</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>//使用Mybatis第一步 ：获取sqlSessionFactory对象</span></span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>String</span> <span>resource</span> <span>=</span> <span>\"mybatis-config.xml\"</span>;</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>InputStream</span> <span>inputStream</span> <span>=</span> <span>Resources</span>.<span>getResourceAsStream</span>(<span>resource</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>sqlSessionFactory</span> <span>=</span> <span>new</span> <span>SqlSessionFactoryBuilder</span>().<span>build</span>(<span>inputStream</span>);</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;} <span>catch</span> (<span>IOException</span> <span>e</span>) {</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>e</span>.<span>printStackTrace</span>();</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;}</span><br><span> &nbsp; &nbsp;}</span><br><span><span></span></span><br><span> &nbsp; &nbsp;<span>//既然有了 SqlSessionFactory，顾名思义，我们可以从中获得 SqlSession 的实例.</span></span><br><span> &nbsp; &nbsp;<span>// SqlSession 提供了在数据库执行 SQL 命令所需的所有方法。</span></span><br><span> &nbsp; &nbsp;<span>public</span> <span>static</span> <span>SqlSession</span> <span>getSqlSession</span>(){</span><br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span>return</span> <span>sqlSessionFactory</span>.<span>openSession</span>();</span><br><span> &nbsp; &nbsp;}</span><br><span>}</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>TransitionUtils</code></span><span>：状态跳转的工具类</span>","style":"unordered","closed":false,"items":[{"content":"<span><code>can_grow_taller()</code></span><span>：根据年龄判断是否可以长高</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>getDataByIDWithRequest()</code></span><span>：根据</span><span><code>request</code></span><span>和</span><span><code>id</code></span><span>从数据库中获取数据</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>setDataBySessionEntityWithRequest()</code></span><span>：根据</span><span><code>SessionEntity</code></span><span>和</span><span><code>request</code></span><span>向数据库中写数据</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>getAgeByBirthday()</code></span><span>：根据出生年月计算年龄</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>can_be_pregnant()</code></span><span>：根据性别和年龄判断是否有怀孕的可能</span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>getStateTrans()</code></span><span>：根据初始状态</span><span><code>pre_state</code></span><span>和</span><span><code>condition</code></span><span>从数据库中读取</span><span><code>StateTransition</code></span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>getSelectType()</code></span><span>：根据初始状态</span><span><code>pre_state</code></span><span>获取对应的</span><span><code>SelectType</code></span><span>的</span><span><code>List</code></span>","style":"unordered","closed":false,"items":[]},{"content":"<span><code>getConditionBycorenlp()</code></span><span>：将文本信息通过</span><span><code>get</code></span><span>请求发送给</span><span><code>corenlp</code></span><span>的接口以便获得该文本的意图</span>","style":"unordered","closed":false,"items":[]}]}]}]},"common":{"quote":false}},{"key":"paragraph","data":{"content":"<span>TODO</span>"},"common":{"quote":false}},{"key":"list","data":{"style":"unordered","items":[{"content":"<span>static</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>sqlsession（解决）</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>state表中todo的属性映射到map的key</span>","style":"unordered","closed":false,"items":[]},{"content":"<span>配置文件通过classloader，而不要放在src下</span>","style":"unordered","closed":false,"items":[]}]},"common":{"quote":false}}],"typeset":"github","layout":"print","basic":{"title":"","cover":"","summary":""}}